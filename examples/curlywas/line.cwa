import "env.memory" memory(4);

import "env.cls" fn cls(i32);
import "env.time" fn time() -> f32;
import "env.line" fn line(f32, f32, f32, f32, i32);
import "env.sin" fn sin(f32) -> f32;
import "env.cos" fn cos(f32) -> f32;

export fn upd() {
    cls(0);
    let i: i32;
    loop lines {
        let angle = i as f32 * (3.1415 / 25.0) + time() * 0.125;
        line(
            160 as f32, 120 as f32,
            160 as f32 + sin(angle) * 100 as f32,
            120 as f32 + cos(angle) * 100 as f32,
            47);
        branch_if (i := i + 1)  < 50: lines;
    }
}
